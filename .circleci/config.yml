version: 2
jobs:
  build-and-test:
    docker:
      - image: 813968012009.dkr.ecr.us-east-1.amazonaws.com/circleci-openjdk8-8u162
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
    # The below is required because of https://discuss.circleci.com/t/circle-working-directory-doesnt-expand/17007
    working_directory: /home/circleci/project
    steps:
      - checkout
      - restore_cache:
          # if you ever need to invalidate the cache, simply bump the version number
          keys:
            - v1-maven-{{ .Branch }}-{{ checksum "pom.xml" }}
            - v1-maven-{{ .Branch }}
      - run: mvn dependency:resolve-plugins dependency:go-offline -B -Dstyle.color=always
      - save_cache:
          paths:
            - ~/.m2
          key: v1-maven-{{ .Branch }}-{{ checksum "pom.xml" }}
      - setup_remote_docker
      - run:
          name: Build, run, and test
          command: /electrum/bin/postmanTestJava.sh Giftcard
      - run:
          name: Build hugo site
          command: ./src/docs/devguide/hugo/run.sh $CIRCLE_WORKING_DIRECTORY
      - run:
          name: Create workspace directory for persisting between jobs
          command: mkdir -p workspace
      - run:
          name: Save docker image for persisting
          command: |
            docker save -o workspace/test-server-image.tar $CIRCLE_PROJECT_REPONAME
      - run:
          name: Save devguide for persisting
          command: cp -r target/devguide/site workspace
      - persist_to_workspace:
          root: workspace
          paths:
            - test-server-image.tar
            - site
  deploy:
    docker:
      - image: 813968012009.dkr.ecr.us-east-1.amazonaws.com/circleci-openjdk8-8u162
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
    working_directory: /home/circleci/project
    environment:
      HEROKU_APP: giftcard-service-test-pack
      DOCKER_REPONAME: electrum/giftcard-test-server
    steps:
      - checkout
      - run:
          name: Setup Heroku
          command: |
            echo 'machine git.heroku.com
              login $HEROKU_LOGIN
              password $HEROKU_API_KEY' > ~/.netrc
            echo 'VerifyHostKeyDNS yes
                  StrictHostKeyChecking no' > ~/.ssh/config
      - run:
          name: Deploy Master to Heroku
          command: |
            git push git@heroku.com:$HEROKU_APP.git master
      - attach_workspace:
          at: workspace
      - run:
          name: Export env vars
          command: |
            echo "export TAG=$(mvn -q -Dexec.executable=echo -Dexec.args='${giftcard-version}' --non-recursive exec:exec | cut -c1)" >> $BASH_ENV
            echo "export BUILD_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $BASH_ENV
            echo 'export DOCS_REPONAME="$CIRCLE_PROJECT_REPONAME-docs"' >> $BASH_ENV
      - setup_remote_docker
      - run:
          name: Deploy image to Docker Hub
          command: |
            docker load < workspace/test-server-image.tar
            # tag with major version of underlying service interface
            docker tag $CIRCLE_PROJECT_REPONAME $DOCKER_REPONAME:$TAG
            echo $DOCKERHUB_PWD | docker login -u $DOCKERHUB_USERNAME --password-stdin
            docker push $DOCKER_REPONAME:$TAG
      - run:
          name: Deploy docs to Github Pages
          command: |
            git clone git@github.com:electrumpayments/$DOCS_REPONAME.git ~/$DOCS_REPONAME
            cp -r workspace/site/* ~/$DOCS_REPONAME
            cd ~/$DOCS_REPONAME
            git add .
            if [[ `git status --porcelain` ]]; then
              git commit -m "Adding documentation for release v$BUILD_VERSION. [ci skip]"
              git push
              if [ $? -ne 0 ]; then
                echo "git push failed: failing build"
                exit 1;
              fi
            else
              echo "No docs changed, not deploying to Github pages"
            fi
  build-with-latest-deps:
    docker:
      - image: 813968012009.dkr.ecr.us-east-1.amazonaws.com/circleci-openjdk8-8u162
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
    steps:
      - checkout
      - restore_cache:
          # if you ever need to invalidate the cache, simply bump the version number
          keys:
            - v1-maven-{{ .Branch }}-{{ checksum "pom.xml" }}
            - v1-maven-{{ .Branch }}
      - run:
          name: Update pom with latest Electrum deps
          command: /electrum/bin/updatePomWithLatestDeps.sh
      - setup_remote_docker
      - run:
          name: Test, but only if any Electrum dependencies changed
          command: /electrum/bin/postmanTestWithUpdatedDepsJava.sh Giftcard
      - run:
          name: Notify success to slack
          command: /electrum/bin/notifySlackDepBuildSucceeded.sh
          when: on_success
      - run:
          name: Notify failure to slack
          command: /electrum/bin/notifySlackDepBuildFailed.sh
          when: on_fail

workflows:
  version: 2
  commit:
    jobs:
      - build-and-test:
          context: java
      - deploy:
          context: java
          requires:
            - build-and-test
          filters:
            branches:
              only: master
  nightly:
    jobs:
      - build-with-latest-deps:
          context: java
    triggers:
      - schedule:
          # every night at 00:00 SAST (22:00 UTC)
          cron: "00 22 * * *"
          filters:
            branches:
              only:
                - master
