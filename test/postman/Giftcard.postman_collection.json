{
	"variables": [],
	"info": {
		"name": "Giftcard",
		"_postman_id": "aa2ea5a8-a6bf-de9f-1221-2227d61d3fed",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Activation Parameters",
			"description": "This collections tests the following aspects of activation messages:\n\n- a requestAmount submitted as part of an activation is automatically loaded onto the card.\n- a clear PIN submitted as part of the activation sets the card's clear PIN value.\n- an encrypted PIN submitted as part of the activation sets the card's encrypted PIN value.",
			"item": [
				{
					"name": "Pre-run Reset",
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/testServerAdmin/reset",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userDataWillBeLost\": \"TRUE\",\n\t\"resetUserData\": \"TRUE\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Activation with Load",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\n\nvar amounts = jsonData.amounts;\ntests[\"Amounts present\"] = amounts !== null;\ntests[\"Balance amount returned\"] = amounts.balanceAmount !== null;\ntests[\"Balance amount correct\"] = amounts.balanceAmount.amount == postman.getEnvironmentVariable(\"loadAmount\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"activationRequestUuid\", requestUuid);\n\nvar card = {pan: \"8561725642498548895\", expDate: \"4010\"};\npostman.setEnvironmentVariable(\"cardPan\", card.pan);\npostman.setEnvironmentVariable(\"cardExpDate\", card.expDate);\n\nvar product = {id: \"product001\", barcode: \"2216314009131\", type: \"physical\", startingBalance: 0};\npostman.setEnvironmentVariable(\"productId\", product.id);\npostman.setEnvironmentVariable(\"productBarcode\", product.barcode);\npostman.setEnvironmentVariable(\"productType\", product.type);\npostman.setEnvironmentVariable(\"productStartBal\", product.startingBalance);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"sett\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);\n\npostman.setEnvironmentVariable(\"loadAmount\", 20);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/giftcard/{{version}}/activations/{{activationRequestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{activationRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"product\": {\n      \"id\": \"{{productId}}\"\n    },\n    \"amounts\": {\n      \"requestAmount\": {\n          \"amount\": \"{{loadAmount}}\",\n          \"currency\": \"710\"\n      }\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Post-activation Lookup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\n\nvar amounts = jsonData.amounts;\ntests[\"Amounts present\"] = amounts !== null;\ntests[\"Balance amount returned\"] = amounts.balanceAmount !== null;\ntests[\"Balance amount correct\"] = amounts.balanceAmount.amount == postman.getEnvironmentVariable(\"loadAmount\");\n//a server implementation may reflect the loaded amount as part of the available balance immediately after the activation request or only upon the activation confirmation.\n//Therefore the available balance will not be tested after immediately after the activation request only."
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"requestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/lookupGiftcard/{{requestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": "This lookup checks that the card's balances are as expected."
					},
					"response": []
				},
				{
					"name": "Acivation Confirmation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 202\"] = responseCode.code === 202;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Advice Response id is not null\"] = jsonData.id !== null;\ntests[\"Original Response id is not null\"] = jsonData.requestId !== null;\ntests[\"Original id equals request id\"] = jsonData.requestId === postman.getEnvironmentVariable(\"activationRequestUuid\");\ntests[\"Advice Response id equals request id\"] = jsonData.id === postman.getEnvironmentVariable(\"adviceUuid\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar adviceUuid = uuid();\npostman.setEnvironmentVariable(\"adviceUuid\", adviceUuid);\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/activations/{{activationRequestUuid}}/confirmations/{{adviceUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{adviceUuid}}\",\n    \"requestId\": \"{{activationRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Post-load-req Lookup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\n\nvar amounts = jsonData.amounts;\ntests[\"Amounts present\"] = amounts !== null;\ntests[\"Balance amount returned\"] = amounts.balanceAmount !== null;\ntests[\"Balance amount correct\"] = amounts.balanceAmount.amount == postman.getEnvironmentVariable(\"loadAmount\");\ntests[\"Available balance returned\"] = amounts.availableBalance !== null;\n//at this point the amount loaded during activation must be reflected as available\ntests[\"Available balance amount correct\"] = amounts.availableBalance.amount == postman.getEnvironmentVariable(\"loadAmount\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"requestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/lookupGiftcard/{{requestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": "This lookup checks that the card's book balance was updated but not the available balance."
					},
					"response": []
				},
				{
					"name": "Activate 7921 With New Enc PIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"activationRequestUuid\", requestUuid);\n\nvar card1 = {pan: \"0597253373808397921\", expDate: \"4001\", encPin: \"30DED59C\"};\npostman.setEnvironmentVariable(\"card1Pan\", card1.pan);\npostman.setEnvironmentVariable(\"card1ExpDate\", card1.expDate);\npostman.setEnvironmentVariable(\"card1OldEncPin\", card1.encPin);\npostman.setEnvironmentVariable(\"card1NewEncPin\", \"AAAAAAAA\");\n\nvar product = {id: \"product002\", barcode: \"9355115077680\", type: \"physical\", startingBalance: 100};\npostman.setEnvironmentVariable(\"productId\", product.id);\npostman.setEnvironmentVariable(\"productBarcode\", product.barcode);\npostman.setEnvironmentVariable(\"productType\", product.type);\npostman.setEnvironmentVariable(\"productStartBal\", product.startingBalance);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"sett\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/giftcard/{{version}}/activations/{{activationRequestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{activationRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{card1Pan}}\",\n      \"expiryDate\": \"{{card1ExpDate}}\",\n      \"encryptedPin\": \"{{card1NewEncPin}}\"\n    },\n    \"product\": {\n      \"id\": \"{{productId}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Acivation Confirmation 7921",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 202\"] = responseCode.code === 202;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Advice Response id is not null\"] = jsonData.id !== null;\ntests[\"Original Response id is not null\"] = jsonData.requestId !== null;\ntests[\"Original id equals request id\"] = jsonData.requestId === postman.getEnvironmentVariable(\"activationRequestUuid\");\ntests[\"Advice Response id equals request id\"] = jsonData.id === postman.getEnvironmentVariable(\"adviceUuid\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar adviceUuid = uuid();\npostman.setEnvironmentVariable(\"adviceUuid\", adviceUuid);\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/activations/{{activationRequestUuid}}/confirmations/{{adviceUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{adviceUuid}}\",\n    \"requestId\": \"{{activationRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Activate 3442 With New Clear PIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"activationRequestUuid\", requestUuid);\n\nvar card2 = {pan: \"1258554313683463442\", expDate: \"4007\", clearPin: \"7052\"};\npostman.setEnvironmentVariable(\"card2Pan\", card2.pan);\npostman.setEnvironmentVariable(\"card2ExpDate\", card2.expDate);\npostman.setEnvironmentVariable(\"card2OldClearPin\", card2.clearPin);\npostman.setEnvironmentVariable(\"card2NewClearPin\", \"1234\");\n\nvar product = {id: \"product002\", barcode: \"9355115077680\", type: \"physical\", startingBalance: 100};\npostman.setEnvironmentVariable(\"productId\", product.id);\npostman.setEnvironmentVariable(\"productBarcode\", product.barcode);\npostman.setEnvironmentVariable(\"productType\", product.type);\npostman.setEnvironmentVariable(\"productStartBal\", product.startingBalance);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"sett\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/giftcard/{{version}}/activations/{{activationRequestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{activationRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{card2Pan}}\",\n      \"expiryDate\": \"{{card2ExpDate}}\",\n      \"clearPin\": \"{{card2NewClearPin}}\"\n    },\n    \"product\": {\n      \"id\": \"{{productId}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Acivation Confirmation 3442",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 202\"] = responseCode.code === 202;\nvar jsonData = JSON.parse(responseBody);\ntests[\"Advice Response id is not null\"] = jsonData.id !== null;\ntests[\"Original Response id is not null\"] = jsonData.requestId !== null;\ntests[\"Original id equals request id\"] = jsonData.requestId === postman.getEnvironmentVariable(\"activationRequestUuid\");\ntests[\"Advice Response id equals request id\"] = jsonData.id === postman.getEnvironmentVariable(\"adviceUuid\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar adviceUuid = uuid();\npostman.setEnvironmentVariable(\"adviceUuid\", adviceUuid);\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/activations/{{activationRequestUuid}}/confirmations/{{adviceUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{adviceUuid}}\",\n    \"requestId\": \"{{activationRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Old Enc PIN Declined 7921",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar errorDetail = JSON.parse(responseBody);\ntests[\"Error type is INCORRECT_PIN\"] = errorDetail.errorType === \"INCORRECT_PIN\";\ntests[\"Test that requestType is not null\"] = errorDetail.requestType !== null;\ntests[\"Test that requestType is RedemptionRequest\"] = errorDetail.requestType === \"REDEMPTION_REQUEST\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"redemptionRequestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);\n\npostman.setEnvironmentVariable(\"redeemAmount\", 10);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/redemptions/{{redemptionRequestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{redemptionRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{card1Pan}}\",\n      \"expiryDate\": \"{{card1ExpDate}}\",\n      \"encryptedPin\": \"{{card1OldEncPin}}\"\n    },\n    \"amounts\": {\n      \"requestAmount\": {\n          \"amount\": \"{{redeemAmount}}\",\n          \"currency\": \"710\"\n      }\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Old Clear PIN Declined 3442",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar errorDetail = JSON.parse(responseBody);\ntests[\"Error type is INCORRECT_PIN\"] = errorDetail.errorType === \"INCORRECT_PIN\";\ntests[\"Test that requestType is not null\"] = errorDetail.requestType !== null;\ntests[\"Test that requestType is RedemptionRequest\"] = errorDetail.requestType === \"REDEMPTION_REQUEST\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"redemptionRequestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);\n\npostman.setEnvironmentVariable(\"redeemAmount\", 10);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/redemptions/{{redemptionRequestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{redemptionRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{card2Pan}}\",\n      \"expiryDate\": \"{{card2ExpDate}}\",\n      \"clearPin\": \"{{card2OldClearPin}}\"\n    },\n    \"amounts\": {\n      \"requestAmount\": {\n          \"amount\": \"{{redeemAmount}}\",\n          \"currency\": \"710\"\n      }\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "New Enc PIN Approved 7921",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"redemptionRequestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);\n\npostman.setEnvironmentVariable(\"redeemAmount\", 10);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/redemptions/{{redemptionRequestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{redemptionRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{card1Pan}}\",\n      \"expiryDate\": \"{{card1ExpDate}}\",\n      \"encryptedPin\": \"{{card1NewEncPin}}\"\n    },\n    \"amounts\": {\n      \"requestAmount\": {\n          \"amount\": \"{{redeemAmount}}\",\n          \"currency\": \"710\"\n      }\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "New Clear PIN Approved 3442",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"redemptionRequestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);\n\npostman.setEnvironmentVariable(\"redeemAmount\", 10);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/redemptions/{{redemptionRequestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{redemptionRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{card2Pan}}\",\n      \"expiryDate\": \"{{card2ExpDate}}\",\n      \"clearPin\": \"{{card2NewClearPin}}\"\n    },\n    \"amounts\": {\n      \"requestAmount\": {\n          \"amount\": \"{{redeemAmount}}\",\n          \"currency\": \"710\"\n      }\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Post-run Reset",
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/testServerAdmin/reset",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userDataWillBeLost\": \"TRUE\",\n\t\"resetUserData\": \"TRUE\"\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Admin",
			"description": "",
			"item": [
				{
					"name": "Delete CardData",
					"request": {
						"url": "{{host}}/giftcard/{{version}}/testServerAdmin/data/card/1111111111111111111",
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete ProductData",
					"request": {
						"url": "{{host}}/giftcard/{{version}}/testServerAdmin/data/product/product999",
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Add ProductData",
					"request": {
						"url": "http://{{host}}/giftcard/{{version}}/testServerAdmin/data/product",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n      \"product\": {\n        \"id\": \"product999\",\n        \"barcode\": \"9999999999999\",\n        \"type\": \"physical\"\n      },\n      \"startingBalance\": {\n        \"amount\": 999999999999,\n        \"currency\": \"710\"\n      }\n    }\n]"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Add CardData",
					"request": {
						"url": "http://{{host}}/giftcard/{{version}}/testServerAdmin/data/card",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n      \"card\": {\n        \"pan\": \"1111111111111111111\",\n        \"expiryDate\": \"2211\",\n        \"clearPin\": \"4757\"\n      },\n      \"balance\": {\n        \"amount\": 123,\n        \"currency\": \"710\"\n      },\n      \"status\": \"NEW\"\n    },\n    {\n      \"card\": {\n        \"pan\": \"2222222222222222222\",\n        \"expiryDate\": \"2212\"\n      },\n      \"balance\": {\n        \"amount\": 0,\n        \"currency\": \"710\"\n      },\n      \"status\": \"NEW\"\n    }\n]"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Data",
					"request": {
						"url": "{{host}}/giftcard/{{version}}/testServerAdmin/data",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Happy Day Requests",
			"description": "A set of successful and confirmed requests of all types. This demonstrates the complete lifecycle of a card and ensures that the base functionality is in place.",
			"item": [
				{
					"name": "Pre-run Reset",
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/testServerAdmin/reset",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userDataWillBeLost\": \"TRUE\",\n\t\"resetUserData\": \"TRUE\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Activation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\n\nvar amounts = jsonData.amounts;\ntests[\"Amounts present\"] = amounts !== null;\ntests[\"Balance amount returned\"] = amounts.balanceAmount !== null;\ntests[\"Balance amount correct\"] = amounts.balanceAmount.amount == postman.getEnvironmentVariable(\"productStartBal\");\ntests[\"Available balance returned\"] = amounts.availableBalance !== null;\ntests[\"Available balance correct\"] = amounts.availableBalance.amount == postman.getEnvironmentVariable(\"productStartBal\");\n\npostman.setEnvironmentVariable(\"balanceAmount\", amounts.balanceAmount.amount);\npostman.setEnvironmentVariable(\"activationBalance\", amounts.balanceAmount.amount);\n\nvar originator = jsonData.originator;\ntests[\"Originator present\"] = originator !== null;\ntests[\"Originator Merchant present\"] = originator.merchant !== null;\ntests[\"Originator Institution present\"] = originator.institution !== null;\ntests[\"Originator terminal echoed\"] = originator.terminalId === postman.getEnvironmentVariable(\"termId\");\n\nvar merchant = originator.merchant;\ntests[\"Merchant ID echoed\"] = merchant.merchantId === postman.getEnvironmentVariable(\"merchantId\");\ntests[\"Merchant type echoed\"] = merchant.merchantType === postman.getEnvironmentVariable(\"merchantType\");\ntests[\"Merchant name present\"] = merchant.merchantName !== null;\n\nvar merchantName = merchant.merchantName;\ntests[\"Merchant Name echoed\"] = merchantName.name === postman.getEnvironmentVariable(\"merchantName\");\ntests[\"Merchant City echoed\"] = merchantName.city === postman.getEnvironmentVariable(\"merchantCity\");\ntests[\"Merchant Region echoed\"] = merchantName.region === postman.getEnvironmentVariable(\"merchantRegion\");\ntests[\"Merchant Country echoed\"] = merchantName.country === postman.getEnvironmentVariable(\"merchantCountry\");\n\nvar originatorInst = originator.institution;\ntests[\"Originator institution present\"] = originatorInst !== null;\ntests[\"Originator institution ID echoed\"] = originatorInst.id === postman.getEnvironmentVariable(\"originatorInstId\");\ntests[\"Originator institution name echoed\"] = originatorInst.name === postman.getEnvironmentVariable(\"originatorInstName\");\n\nvar settlementEntity = jsonData.settlementEntity;\ntests[\"Settlement Entity institution present\"] = settlementEntity !== null;\ntests[\"Settlement Entity institution ID present\"] = settlementEntity.id !== null;\ntests[\"Settlement Entity institution name present\"] = settlementEntity.name !== null;\n\nvar receiver = jsonData.receiver;\ntests[\"Receiver institution present\"] = receiver !== null;\ntests[\"Receiver institution ID present\"] = receiver.id !== null;\ntests[\"Receiver institution name present\"] = receiver.name !== null;\n\nvar thirdPartyIndentifiers = jsonData.thirdPartyIndentifiers;\ntests[\"Third Party Indentifiers present\"] = thirdPartyIndentifiers !== null;"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"activationRequestUuid\", requestUuid);\n\nvar card = {pan: \"3395745765797535106\", expDate: \"4003\"};\npostman.setEnvironmentVariable(\"cardPan\", card.pan);\npostman.setEnvironmentVariable(\"cardExpDate\", card.expDate);\n\nvar product = {id: \"product002\", barcode: \"9355115077680\", type: \"physical\", startingBalance: 100};\npostman.setEnvironmentVariable(\"productId\", product.id);\npostman.setEnvironmentVariable(\"productBarcode\", product.barcode);\npostman.setEnvironmentVariable(\"productType\", product.type);\npostman.setEnvironmentVariable(\"productStartBal\", product.startingBalance);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"sett\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/giftcard/{{version}}/activations/{{activationRequestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{activationRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"product\": {\n      \"id\": \"{{productId}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Acivation Confirmation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 202\"] = responseCode.code === 202;\nvar jsonData = JSON.parse(responseBody);\ntests[\"Advice Response id is not null\"] = jsonData.id !== null;\ntests[\"Original Response id is not null\"] = jsonData.requestId !== null;\ntests[\"Original id equals request id\"] = jsonData.requestId === postman.getEnvironmentVariable(\"activationRequestUuid\");\ntests[\"Advice Response id equals request id\"] = jsonData.id === postman.getEnvironmentVariable(\"adviceUuid\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar adviceUuid = uuid();\npostman.setEnvironmentVariable(\"adviceUuid\", adviceUuid);\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/activations/{{activationRequestUuid}}/confirmations/{{adviceUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{adviceUuid}}\",\n    \"requestId\": \"{{activationRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Post-activation Lookup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\n\nvar amounts = jsonData.amounts;\ntests[\"Amounts present\"] = amounts !== null;\ntests[\"Balance amount returned\"] = amounts.balanceAmount !== null;\ntests[\"Balance amount correct\"] = amounts.balanceAmount.amount == postman.getEnvironmentVariable(\"balanceAmount\");\ntests[\"Available balance returned\"] = amounts.availableBalance !== null;\ntests[\"Available balance correct\"] = amounts.availableBalance.amount == postman.getEnvironmentVariable(\"balanceAmount\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"requestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/lookupGiftcard/{{requestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": "This lookup checks that the card's balances are as expected."
					},
					"response": []
				},
				{
					"name": "Load",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\n\nvar amounts = jsonData.amounts;\ntests[\"Amounts present\"] = amounts !== null;\ntests[\"Requested amount returned\"] = amounts.requestAmount !== null;\ntests[\"Requested amount correct\"] = amounts.requestAmount.amount == postman.getEnvironmentVariable(\"loadAmount\");\ntests[\"Approved amount returned\"] = amounts.approvedAmount !== null;\ntests[\"Approved amount correct\"] = amounts.approvedAmount.amount == postman.getEnvironmentVariable(\"loadAmount\");\n/*\nDuring a load the book balance is updated immediately.\nThe available balance should only update upon confirmation.\nTherefore we check that the two balances have different values.\n*/\ntests[\"Balance amount returned\"] = amounts.balanceAmount !== null;\n\ntests[\"Balance amount correct\"] = amounts.balanceAmount.amount == parseInt(postman.getEnvironmentVariable(\"balanceAmount\")) + amounts.approvedAmount.amount;\ntests[\"Available balance returned\"] = amounts.availableBalance !== null;\ntests[\"Available balance correct\"] = amounts.availableBalance.amount == postman.getEnvironmentVariable(\"activationBalance\");\n\npostman.setEnvironmentVariable(\"balanceAmount\", amounts.balanceAmount.amount);"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"loadRequestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);\n\npostman.setEnvironmentVariable(\"loadAmount\", 20);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/loads/{{loadRequestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{loadRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"amounts\": {\n      \"requestAmount\": {\n          \"amount\": \"{{loadAmount}}\",\n          \"currency\": \"710\"\n      }\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Post-load-req Lookup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\n\nvar amounts = jsonData.amounts;\ntests[\"Amounts present\"] = amounts !== null;\ntests[\"Balance amount returned\"] = amounts.balanceAmount !== null;\ntests[\"Balance amount correct\"] = amounts.balanceAmount.amount == postman.getEnvironmentVariable(\"balanceAmount\");\ntests[\"Available balance returned\"] = amounts.availableBalance !== null;\n//N.B. check the available balance isn't updated until confirmation.\ntests[\"Available balance amount correct\"] = amounts.availableBalance.amount == postman.getEnvironmentVariable(\"activationBalance\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"requestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/lookupGiftcard/{{requestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": "This lookup checks that the card's book balance was updated but not the available balance."
					},
					"response": []
				},
				{
					"name": "Load Confirmation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 202\"] = responseCode.code === 202;\nvar jsonData = JSON.parse(responseBody);\ntests[\"Advice Response id is not null\"] = jsonData.id !== null;\ntests[\"Original Response id is not null\"] = jsonData.requestId !== null;\ntests[\"Original id equals request id\"] = jsonData.requestId === postman.getEnvironmentVariable(\"loadRequestUuid\");\ntests[\"Advice Response id equals request id\"] = jsonData.id === postman.getEnvironmentVariable(\"adviceUuid\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar adviceUuid = uuid();\npostman.setEnvironmentVariable(\"adviceUuid\", adviceUuid);\n\nvar uuidLast4 = adviceUuid.substr(adviceUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/loads/{{loadRequestUuid}}/confirmations/{{adviceUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{adviceUuid}}\",\n    \"requestId\": \"{{loadRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\" : [\n      {\n        \"institutionId\": \"11111111\",\n        \"transactionIdentifier\": \"ORIG6459\"\n      },\n      {\n        \"institutionId\": \"22222222\",\n        \"transactionIdentifier\": \"CLNT6459\"\n      }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Post-load-conf Lookup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\n\nvar amounts = jsonData.amounts;\ntests[\"Amounts present\"] = amounts !== null;\n//Now that the confirmation has been processed we expect the two balances to be the same\ntests[\"Balance amount returned\"] = amounts.balanceAmount !== null;\ntests[\"Balance amount correct\"] = amounts.balanceAmount.amount == postman.getEnvironmentVariable(\"balanceAmount\");\ntests[\"Available balance returned\"] = amounts.availableBalance !== null;\ntests[\"Available balance amount correct\"] = amounts.availableBalance.amount == postman.getEnvironmentVariable(\"balanceAmount\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"requestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/lookupGiftcard/{{requestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": "This lookup checks that the card's available balance was updated but the book balance remained unchanged.\n\nSince the book balance was updated upon the request and the available balance was updated upon confirmation the two balances should now be the same."
					},
					"response": []
				},
				{
					"name": "Redemption",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\n\nvar amounts = jsonData.amounts;\ntests[\"Amounts present\"] = amounts !== null;\ntests[\"Requested amount returned\"] = amounts.requestAmount !== null;\ntests[\"Requested amount correct\"] = amounts.requestAmount.amount == postman.getEnvironmentVariable(\"redeemAmount\");\ntests[\"Approved amount returned\"] = amounts.approvedAmount !== null;\ntests[\"Approved amount correct\"] = amounts.approvedAmount.amount == postman.getEnvironmentVariable(\"redeemAmount\");\n/*\nDuring a redemption both balances are updated immediately.\nTherefore we check that the two balances are the same and that the reflect the redemtpion.\n*/\ntests[\"Balance amount returned\"] = amounts.balanceAmount !== null;\ntests[\"Balance amount correct\"] = amounts.balanceAmount.amount == postman.getEnvironmentVariable(\"balanceAmount\") - amounts.approvedAmount.amount;\ntests[\"Available balance returned\"] = amounts.availableBalance !== null;\ntests[\"Available balance correct\"] = amounts.availableBalance.amount == postman.getEnvironmentVariable(\"balanceAmount\") - amounts.approvedAmount.amount;\n\npostman.setEnvironmentVariable(\"balanceAmount\", amounts.balanceAmount.amount);"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"redemptionRequestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);\n\npostman.setEnvironmentVariable(\"redeemAmount\", 10);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/redemptions/{{redemptionRequestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{redemptionRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"amounts\": {\n      \"requestAmount\": {\n          \"amount\": \"{{redeemAmount}}\",\n          \"currency\": \"710\"\n      }\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Post-redeem Lookup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\n\nvar amounts = jsonData.amounts;\ntests[\"Amounts present\"] = amounts !== null;\n\ntests[\"Balance amount returned\"] = amounts.balanceAmount !== null;\ntests[\"Balance amount correct\"] = amounts.balanceAmount.amount == postman.getEnvironmentVariable(\"balanceAmount\");\ntests[\"Available balance returned\"] = amounts.availableBalance !== null;\ntests[\"Available balance amount correct\"] = amounts.availableBalance.amount == postman.getEnvironmentVariable(\"balanceAmount\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"requestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/lookupGiftcard/{{requestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": "This lookup checks that both the card's balances were updated to reflect the load."
					},
					"response": []
				},
				{
					"name": "Redemption Confirmation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 202\"] = responseCode.code === 202;\nvar jsonData = JSON.parse(responseBody);\ntests[\"Advice Response id is not null\"] = jsonData.id !== null;\ntests[\"Original Response id is not null\"] = jsonData.requestId !== null;\ntests[\"Original id equals request id\"] = jsonData.requestId === postman.getEnvironmentVariable(\"redemptionRequestUuid\");\ntests[\"Advice Response id equals request id\"] = jsonData.id === postman.getEnvironmentVariable(\"adviceUuid\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar adviceUuid = uuid();\npostman.setEnvironmentVariable(\"adviceUuid\", adviceUuid);\n\nvar uuidLast4 = adviceUuid.substr(adviceUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/redemptions/{{redemptionRequestUuid}}/confirmations/{{adviceUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{adviceUuid}}\",\n    \"requestId\": \"{{redemptionRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\" : [\n      {\n        \"institutionId\": \"11111111\",\n        \"transactionIdentifier\": \"ORIG6459\"\n      },\n      {\n        \"institutionId\": \"22222222\",\n        \"transactionIdentifier\": \"CLNT6459\"\n      }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Post-redeem-conf Lookup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\n\nvar amounts = jsonData.amounts;\ntests[\"Amounts present\"] = amounts !== null;\ntests[\"Balance amount returned\"] = amounts.balanceAmount !== null;\ntests[\"Balance amount correct\"] = amounts.balanceAmount.amount == postman.getEnvironmentVariable(\"balanceAmount\");\ntests[\"Available balance returned\"] = amounts.availableBalance !== null;\ntests[\"Available balance amount correct\"] = amounts.availableBalance.amount == postman.getEnvironmentVariable(\"balanceAmount\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"requestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/lookupGiftcard/{{requestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": "This lookup checks that the card's balances are still correct after the confirmation is processed."
					},
					"response": []
				},
				{
					"name": "Void",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\n\nvar amounts = jsonData.amounts;\ntests[\"Amounts present\"] = amounts !== null;\n//if there's a balance on the card when it's voided the server must indicate so\ntests[\"Balance amount returned\"] = amounts.balanceAmount !== null;\ntests[\"Balance amount correct\"] = amounts.balanceAmount.amount == postman.getEnvironmentVariable(\"balanceAmount\");\ntests[\"Available balance returned\"] = amounts.availableBalance !== null;\ntests[\"Available balance correct\"] = amounts.availableBalance.amount == postman.getEnvironmentVariable(\"balanceAmount\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"voidRequestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/voids/{{voidRequestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{voidRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Post-void Lookup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\n\nvar amounts = jsonData.amounts;\ntests[\"Amounts present\"] = amounts !== null;\n\ntests[\"Balance amount returned\"] = amounts.balanceAmount !== null;\ntests[\"Balance amount correct\"] = amounts.balanceAmount.amount == postman.getEnvironmentVariable(\"balanceAmount\");\ntests[\"Available balance returned\"] = amounts.availableBalance !== null;\ntests[\"Available balance amount correct\"] = amounts.availableBalance.amount == postman.getEnvironmentVariable(\"balanceAmount\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"requestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/lookupGiftcard/{{requestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": "This lookup checks that both the card's balances continue to reflect any remaining balance."
					},
					"response": []
				},
				{
					"name": "Void Confirmation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 202\"] = responseCode.code === 202;\nvar jsonData = JSON.parse(responseBody);\ntests[\"Advice Response id is not null\"] = jsonData.id !== null;\ntests[\"Original Response id is not null\"] = jsonData.requestId !== null;\ntests[\"Original id equals request id\"] = jsonData.requestId === postman.getEnvironmentVariable(\"voidRequestUuid\");\ntests[\"Advice Response id equals request id\"] = jsonData.id === postman.getEnvironmentVariable(\"adviceUuid\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar adviceUuid = uuid();\npostman.setEnvironmentVariable(\"adviceUuid\", adviceUuid);\n\nvar uuidLast4 = adviceUuid.substr(adviceUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/voids/{{voidRequestUuid}}/confirmations/{{adviceUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{adviceUuid}}\",\n    \"requestId\": \"{{voidRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\" : [\n      {\n        \"institutionId\": \"11111111\",\n        \"transactionIdentifier\": \"ORIG6459\"\n      },\n      {\n        \"institutionId\": \"22222222\",\n        \"transactionIdentifier\": \"CLNT6459\"\n      }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Post-run Reset",
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/testServerAdmin/reset",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userDataWillBeLost\": \"TRUE\",\n\t\"resetUserData\": \"TRUE\"\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Redeem Before Confirmation",
			"description": "This collection tests that the following aspects of confirmations:\n\n- a card cannot be redeemed before its activation is confirmed (in case the activation is reversed after the redemption).\n- funds loaded onto a card cannot be redeemed before the load is confirmed (in case the load is reversed after the redemption).",
			"item": [
				{
					"name": "Pre-run Reset",
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/testServerAdmin/reset",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userDataWillBeLost\": \"TRUE\",\n\t\"resetUserData\": \"TRUE\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Activation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\n\nvar amounts = jsonData.amounts;\ntests[\"Amounts present\"] = amounts !== null;\ntests[\"Balance amount returned\"] = amounts.balanceAmount !== null;\ntests[\"Balance amount correct\"] = amounts.balanceAmount.amount == postman.getEnvironmentVariable(\"productAStartBal\");\n\npostman.setEnvironmentVariable(\"activationBalance\", amounts.balanceAmount.amount);"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"activationRequestUuid\", requestUuid);\n\nvar card = {pan: \"8561725642498548895\", expDate: \"4010\"};\npostman.setEnvironmentVariable(\"cardPan\", card.pan);\npostman.setEnvironmentVariable(\"cardExpDate\", card.expDate);\n\nvar productA = {id: \"product002\", barcode: \"9355115077680\", type: \"physical\", startingBalance: 100};\npostman.setEnvironmentVariable(\"productAId\", productA.id);\npostman.setEnvironmentVariable(\"productABarcode\", productA.barcode);\npostman.setEnvironmentVariable(\"productAType\", productA.type);\npostman.setEnvironmentVariable(\"productAStartBal\", productA.startingBalance);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"sett\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/giftcard/{{version}}/activations/{{activationRequestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{activationRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"product\": {\n      \"id\": \"{{productAId}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Redemption - Decline",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar errorDetail = JSON.parse(responseBody);\ntests[\"Error type is CARD_NOT_ACTIVATED\"] = errorDetail.errorType === \"CARD_NOT_ACTIVATED\";\ntests[\"Test that requestType is not null\"] = errorDetail.requestType !== null;\ntests[\"Test that requestType is Redemption Request\"] = errorDetail.requestType === \"REDEMPTION_REQUEST\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"redemptionRequestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);\n\npostman.setEnvironmentVariable(\"redeemAmount\", 10);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/redemptions/{{redemptionRequestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{redemptionRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"amounts\": {\n      \"requestAmount\": {\n          \"amount\": \"{{redeemAmount}}\",\n          \"currency\": \"710\"\n      }\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": "This redemption should be declined since the activation has not yet been confirmed."
					},
					"response": []
				},
				{
					"name": "Activation Confirmation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 202\"] = responseCode.code === 202;\nvar jsonData = JSON.parse(responseBody);\ntests[\"Advice Response id is not null\"] = jsonData.id !== null;\ntests[\"Original Response id is not null\"] = jsonData.requestId !== null;\ntests[\"Original id equals request id\"] = jsonData.requestId === postman.getEnvironmentVariable(\"activationRequestUuid\");\ntests[\"Advice Response id equals request id\"] = jsonData.id === postman.getEnvironmentVariable(\"adviceUuid\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar adviceUuid = uuid();\npostman.setEnvironmentVariable(\"adviceUuid\", adviceUuid);\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/activations/{{activationRequestUuid}}/confirmations/{{adviceUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{adviceUuid}}\",\n    \"requestId\": \"{{activationRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Load",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\n\nvar amounts = jsonData.amounts;\ntests[\"Amounts present\"] = amounts !== null;\ntests[\"Requested amount returned\"] = amounts.requestAmount !== null;\ntests[\"Requested amount correct\"] = amounts.requestAmount.amount == postman.getEnvironmentVariable(\"loadAmount\");\ntests[\"Approved amount returned\"] = amounts.approvedAmount !== null;\ntests[\"Approved amount correct\"] = amounts.approvedAmount.amount == postman.getEnvironmentVariable(\"loadAmount\");\ntests[\"Balance amount returned\"] = amounts.balanceAmount !== null;\nvar postLoadBalance = amounts.availableBalance.amount + amounts.approvedAmount.amount;\ntests[\"Balance amount correct\"] = amounts.balanceAmount.amount == postLoadBalance;\ntests[\"Available balance returned\"] = amounts.availableBalance !== null;\ntests[\"Available balance correct\"] = amounts.availableBalance.amount == postman.getEnvironmentVariable(\"activationBalance\");\n\npostman.setEnvironmentVariable(\"postLoadBalance\", postLoadBalance);"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"loadRequestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);\n\npostman.setEnvironmentVariable(\"loadAmount\", 100);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/loads/{{loadRequestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{loadRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"amounts\": {\n      \"requestAmount\": {\n          \"amount\": \"{{loadAmount}}\",\n          \"currency\": \"710\"\n      }\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Redemption - Declined",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar errorDetail = JSON.parse(responseBody);\ntests[\"Error type is INSUFFICIENT_FUNDS\"] = errorDetail.errorType === \"INSUFFICIENT_FUNDS\";\ntests[\"Test that requestType is not null\"] = errorDetail.requestType !== null;\ntests[\"Test that requestType is Redemption Request\"] = errorDetail.requestType === \"REDEMPTION_REQUEST\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"redemptionRequestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);\n\nvar redeemAmount = postman.getEnvironmentVariable(\"activationBalance\") + 1;\npostman.setEnvironmentVariable(\"redeemAmount\", redeemAmount);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/redemptions/{{redemptionRequestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{redemptionRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"amounts\": {\n      \"requestAmount\": {\n          \"amount\": \"{{redeemAmount}}\",\n          \"currency\": \"710\"\n      }\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": "Attempt a redemtpion for activationBalance < x < activationBalance + loadAmount to make sure the load hasn't been affected."
					},
					"response": []
				},
				{
					"name": "Post-run Reset",
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/testServerAdmin/reset",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userDataWillBeLost\": \"TRUE\",\n\t\"resetUserData\": \"TRUE\"\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Reversals",
			"description": "This collection tests the basic reversal handling of the different gift card messages.",
			"item": [
				{
					"name": "Pre-run Reset",
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/testServerAdmin/reset",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userDataWillBeLost\": \"TRUE\",\n\t\"resetUserData\": \"TRUE\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Activation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\n\nvar amounts = jsonData.amounts;\ntests[\"Amounts present\"] = amounts !== null;\ntests[\"Balance amount returned\"] = amounts.balanceAmount !== null;\ntests[\"Balance amount correct\"] = amounts.balanceAmount.amount == postman.getEnvironmentVariable(\"productAStartBal\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"activationRequestUuid\", requestUuid);\n\nvar card = {pan: \"8561725642498548895\", expDate: \"4010\"};\npostman.setEnvironmentVariable(\"cardPan\", card.pan);\npostman.setEnvironmentVariable(\"cardExpDate\", card.expDate);\n\nvar productA = {id: \"product002\", barcode: \"9355115077680\", type: \"physical\", startingBalance: 100};\npostman.setEnvironmentVariable(\"productAId\", productA.id);\npostman.setEnvironmentVariable(\"productABarcode\", productA.barcode);\npostman.setEnvironmentVariable(\"productAType\", productA.type);\npostman.setEnvironmentVariable(\"productAStartBal\", productA.startingBalance);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"sett\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/giftcard/{{version}}/activations/{{activationRequestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{activationRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"product\": {\n      \"id\": \"{{productAId}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Post-activation Lookup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\n\nvar amounts = jsonData.amounts;\ntests[\"Amounts present\"] = amounts !== null;\ntests[\"Balance amount returned\"] = amounts.balanceAmount !== null;\ntests[\"Balance amount correct\"] = amounts.balanceAmount.amount == postman.getEnvironmentVariable(\"productAStartBal\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"requestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/lookupGiftcard/{{requestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": "This lookup checks that the card activation process has begun by inspecting the card's balance."
					},
					"response": []
				},
				{
					"name": "Second Activation - Declined",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar errorDetail = JSON.parse(responseBody);\ntests[\"Error type is CARD_ACTIVATED\"] = errorDetail.errorType === \"CARD_ACTIVATED\";\ntests[\"Test that requestType is not null\"] = errorDetail.requestType !== null;\ntests[\"Test that requestType is Activation Request\"] = errorDetail.requestType === \"ACTIVATION_REQUEST\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"requestUuid\", requestUuid);\n\nvar card = {pan: \"8561725642498548895\", expDate: \"4010\"};\npostman.setEnvironmentVariable(\"cardPan\", card.pan);\npostman.setEnvironmentVariable(\"cardExpDate\", card.expDate);\n\nvar productB = {id: \"product003\", barcode: \"2986279914415\", type: \"physical\", startingBalance: 1000};\npostman.setEnvironmentVariable(\"productBId\", productB.id);\npostman.setEnvironmentVariable(\"productBBarcode\", productB.barcode);\npostman.setEnvironmentVariable(\"productBType\", productB.type);\npostman.setEnvironmentVariable(\"productBStartBal\", productB.startingBalance);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"sett\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/giftcard/{{version}}/activations/{{requestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"product\": {\n      \"id\": \"{{productBId}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": "This activation must be declined as an activation request has already been submitted."
					},
					"response": []
				},
				{
					"name": "Post-second-activation Lookup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\n\nvar amounts = jsonData.amounts;\ntests[\"Amounts present\"] = amounts !== null;\ntests[\"Balance amount returned\"] = amounts.balanceAmount !== null;\ntests[\"Balance amount correct\"] = amounts.balanceAmount.amount == postman.getEnvironmentVariable(\"productAStartBal\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"requestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/lookupGiftcard/{{requestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": "This lookup checks that the card hasn't been activated against a second product by inspecting the card's balance."
					},
					"response": []
				},
				{
					"name": "Activation Reversal",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 202\"] = responseCode.code === 202;\nvar jsonData = JSON.parse(responseBody);\ntests[\"Advice Response id is not null\"] = jsonData.id !== null;\ntests[\"Original Response id is not null\"] = jsonData.requestId !== null;\ntests[\"Original id equals request id\"] = jsonData.requestId === postman.getEnvironmentVariable(\"activationRequestUuid\");\ntests[\"Advice Response id equals request id\"] = jsonData.id === postman.getEnvironmentVariable(\"adviceUuid\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar adviceUuid = uuid();\npostman.setEnvironmentVariable(\"adviceUuid\", adviceUuid);\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/activations/{{activationRequestUuid}}/reversals/{{adviceUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{adviceUuid}}\",\n    \"requestId\": \"{{activationRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"reversalReason\": \"CANCELLED\",\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Activation Confirmation - Declined",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar errorDetail = JSON.parse(responseBody);\ntests[\"Error type is GENERAL_ERROR\"] = errorDetail.errorType === \"GENERAL_ERROR\";\ntests[\"Test that requestType is not null\"] = errorDetail.requestType !== null;\ntests[\"Test that requestType is ActivationConfirmationRequest\"] = errorDetail.requestType === \"ACTIVATION_CONFIRMATION\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar adviceUuid = uuid();\npostman.setEnvironmentVariable(\"adviceUuid\", adviceUuid);\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/activations/{{activationRequestUuid}}/confirmations/{{adviceUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{adviceUuid}}\",\n    \"requestId\": \"{{activationRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": "This confirmation must be declined since the original request has been successfully reversed.\n\nNote that this scenario shouldn't occur since it describes a bug in the client - reversed requests should never be confirmed. However a server implementation should try to identify and correctly handle such scenarios."
					},
					"response": []
				},
				{
					"name": "Redemption - Decline",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar errorDetail = JSON.parse(responseBody);\ntests[\"Error type is CARD_NOT_ACTIVATED\"] = errorDetail.errorType === \"CARD_NOT_ACTIVATED\";\ntests[\"Test that requestType is not null\"] = errorDetail.requestType !== null;\ntests[\"Test that requestType is RedemptionRequest\"] = errorDetail.requestType === \"REDEMPTION_REQUEST\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"redemptionRequestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);\n\npostman.setEnvironmentVariable(\"redeemAmount\", 10);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/redemptions/{{redemptionRequestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{redemptionRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"amounts\": {\n      \"requestAmount\": {\n          \"amount\": \"{{redeemAmount}}\",\n          \"currency\": \"710\"\n      }\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": "This redemption should be declined since the activation was reversed this card has not been activated."
					},
					"response": []
				},
				{
					"name": "Post-activation-reversal Lookup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\n\nvar amounts = jsonData.amounts;\ntests[\"Amounts present\"] = amounts !== null;\ntests[\"Balance amount returned\"] = amounts.balanceAmount !== null;\n//once reversed the balance should go back to 0\ntests[\"Balance amount correct\"] = amounts.balanceAmount.amount === 0;"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"requestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/lookupGiftcard/{{requestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": "This lookup checks that the card activaiton was reversed by inspecting the card's balance."
					},
					"response": []
				},
				{
					"name": "Re-activation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "//this activation must succeed since the previous activation was reversed\ntests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\n\nvar amounts = jsonData.amounts;\ntests[\"Amounts present\"] = amounts !== null;\ntests[\"Balance amount returned\"] = amounts.balanceAmount !== null;\ntests[\"Balance amount correct\"] = amounts.balanceAmount.amount == postman.getEnvironmentVariable(\"productAStartBal\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"activationRequestUuid\", requestUuid);\n\nvar card = {pan: \"8561725642498548895\", expDate: \"4010\"};\npostman.setEnvironmentVariable(\"cardPan\", card.pan);\npostman.setEnvironmentVariable(\"cardExpDate\", card.expDate);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"sett\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/giftcard/{{version}}/activations/{{activationRequestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{activationRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"product\": {\n      \"id\": \"{{productAId}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": "This request must be approved as the original activation request has been reversed."
					},
					"response": []
				},
				{
					"name": "Post-re-activation Lookup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\n\nvar amounts = jsonData.amounts;\ntests[\"Amounts present\"] = amounts !== null;\ntests[\"Balance amount returned\"] = amounts.balanceAmount !== null;\ntests[\"Balance amount correct\"] = amounts.balanceAmount.amount == postman.getEnvironmentVariable(\"productAStartBal\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"requestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/lookupGiftcard/{{requestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": "This lookup checks that the card activation process has begun again by inspecting the card's balance."
					},
					"response": []
				},
				{
					"name": "Activation Confirmation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 202\"] = responseCode.code === 202;\nvar jsonData = JSON.parse(responseBody);\ntests[\"Advice Response id is not null\"] = jsonData.id !== null;\ntests[\"Original Response id is not null\"] = jsonData.requestId !== null;\ntests[\"Original id equals request id\"] = jsonData.requestId === postman.getEnvironmentVariable(\"activationRequestUuid\");\ntests[\"Advice Response id equals request id\"] = jsonData.id === postman.getEnvironmentVariable(\"adviceUuid\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar adviceUuid = uuid();\npostman.setEnvironmentVariable(\"adviceUuid\", adviceUuid);\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/activations/{{activationRequestUuid}}/confirmations/{{adviceUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{adviceUuid}}\",\n    \"requestId\": \"{{activationRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Post-activation-conf Lookup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\n\nvar amounts = jsonData.amounts;\ntests[\"Amounts present\"] = amounts !== null;\ntests[\"Balance amount returned\"] = amounts.balanceAmount !== null;\ntests[\"Balance amount correct\"] = amounts.balanceAmount.amount == postman.getEnvironmentVariable(\"productAStartBal\");\ntests[\"Available balance returned\"] = amounts.availableBalance !== null;\ntests[\"Available balance correct\"] = amounts.availableBalance.amount == postman.getEnvironmentVariable(\"productAStartBal\");\n\npostman.setEnvironmentVariable(\"activationBalance\", postman.getEnvironmentVariable(\"productAStartBal\"));"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"requestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/lookupGiftcard/{{requestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": "This lookup checks that the card activation process has completed by inspecting the card's available balance."
					},
					"response": []
				},
				{
					"name": "Load",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\n\nvar amounts = jsonData.amounts;\ntests[\"Amounts present\"] = amounts !== null;\ntests[\"Requested amount returned\"] = amounts.requestAmount !== null;\ntests[\"Requested amount correct\"] = amounts.requestAmount.amount == postman.getEnvironmentVariable(\"loadAmount\");\ntests[\"Approved amount returned\"] = amounts.approvedAmount !== null;\ntests[\"Approved amount correct\"] = amounts.approvedAmount.amount == postman.getEnvironmentVariable(\"loadAmount\");\ntests[\"Balance amount returned\"] = amounts.balanceAmount !== null;\nvar postLoadBalance = amounts.availableBalance.amount + amounts.approvedAmount.amount;\ntests[\"Balance amount correct\"] = amounts.balanceAmount.amount == postLoadBalance;\ntests[\"Available balance returned\"] = amounts.availableBalance !== null;\ntests[\"Available balance correct\"] = amounts.availableBalance.amount == postman.getEnvironmentVariable(\"activationBalance\");\n\npostman.setEnvironmentVariable(\"postLoadBalance\", postLoadBalance);"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"loadRequestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);\n\npostman.setEnvironmentVariable(\"loadAmount\", 100);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/loads/{{loadRequestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{loadRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"amounts\": {\n      \"requestAmount\": {\n          \"amount\": \"{{loadAmount}}\",\n          \"currency\": \"710\"\n      }\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Post-load-req Lookup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\n\nvar amounts = jsonData.amounts;\ntests[\"Amounts present\"] = amounts !== null;\ntests[\"Balance amount returned\"] = amounts.balanceAmount !== null;\ntests[\"Balance amount correct\"] = amounts.balanceAmount.amount == postman.getEnvironmentVariable(\"postLoadBalance\");\ntests[\"Available balance returned\"] = amounts.availableBalance !== null;\ntests[\"Available balance correct\"] = amounts.availableBalance.amount == postman.getEnvironmentVariable(\"activationBalance\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"requestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/lookupGiftcard/{{requestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": "This lookup checks that the card's book balance was updated but not the available balance."
					},
					"response": []
				},
				{
					"name": "Redemption - Declined",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar errorDetail = JSON.parse(responseBody);\ntests[\"Error type is INSUFFICIENT_FUNDS\"] = errorDetail.errorType === \"INSUFFICIENT_FUNDS\";\ntests[\"Test that requestType is not null\"] = errorDetail.requestType !== null;\ntests[\"Test that requestType is RedemptionRequest\"] = errorDetail.requestType === \"REDEMPTION_REQUEST\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"redemptionRequestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);\n\nvar redeemAmount = postman.getEnvironmentVariable(\"activationBalance\") + 1;\npostman.setEnvironmentVariable(\"redeemAmount\", redeemAmount);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/redemptions/{{redemptionRequestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{redemptionRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"amounts\": {\n      \"requestAmount\": {\n          \"amount\": \"{{redeemAmount}}\",\n          \"currency\": \"710\"\n      }\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": "Attempt a redemtpion for activationBalance < x < activationBalance + loadAmount to make sure the load hasn't been affected."
					},
					"response": []
				},
				{
					"name": "Load Reversal",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 202\"] = responseCode.code === 202;\nvar jsonData = JSON.parse(responseBody);\ntests[\"Advice Response id is not null\"] = jsonData.id !== null;\ntests[\"Original Response id is not null\"] = jsonData.requestId !== null;\ntests[\"Original id equals request id\"] = jsonData.requestId === postman.getEnvironmentVariable(\"loadRequestUuid\");\ntests[\"Advice Response id equals request id\"] = jsonData.id === postman.getEnvironmentVariable(\"adviceUuid\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar adviceUuid = uuid();\npostman.setEnvironmentVariable(\"adviceUuid\", adviceUuid);\n\nvar uuidLast4 = adviceUuid.substr(adviceUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/loads/{{loadRequestUuid}}/reversals/{{adviceUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{adviceUuid}}\",\n    \"requestId\": \"{{loadRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"reversalReason\": \"CANCELLED\",\n    \"thirdPartyIdentifiers\" : [\n      {\n        \"institutionId\": \"11111111\",\n        \"transactionIdentifier\": \"ORIG6459\"\n      },\n      {\n        \"institutionId\": \"22222222\",\n        \"transactionIdentifier\": \"CLNT6459\"\n      }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Load Confirmation - Declined",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar errorDetail = JSON.parse(responseBody);\ntests[\"Error type is GENERAL_ERROR\"] = errorDetail.errorType === \"GENERAL_ERROR\";\ntests[\"Test that requestType is not null\"] = errorDetail.requestType !== null;\ntests[\"Test that requestType is ActivationConfirmationRequest\"] = errorDetail.requestType === \"LOAD_CONFIRMATION\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar adviceUuid = uuid();\npostman.setEnvironmentVariable(\"adviceUuid\", adviceUuid);\n\nvar uuidLast4 = adviceUuid.substr(adviceUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/loads/{{loadRequestUuid}}/confirmations/{{adviceUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{adviceUuid}}\",\n    \"requestId\": \"{{loadRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\" : [\n      {\n        \"institutionId\": \"11111111\",\n        \"transactionIdentifier\": \"ORIG6459\"\n      },\n      {\n        \"institutionId\": \"22222222\",\n        \"transactionIdentifier\": \"CLNT6459\"\n      }\n    ]\n}"
						},
						"description": "This confirmation must be declined since the original request has been successfully reversed.\n\nNote that this scenario shouldn't occur since it describes a bug in the client - reversed requests should never be confirmed. However a server implementation should try to identify and correctly handle such scenarios."
					},
					"response": []
				},
				{
					"name": "Post-load-reversal Lookup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\n\nvar amounts = jsonData.amounts;\ntests[\"Amounts present\"] = amounts !== null;\ntests[\"Balance amount returned\"] = amounts.balanceAmount !== null;\n//this test is the crux of a load reversal\ntests[\"Balance amount correct\"] = amounts.balanceAmount.amount == postman.getEnvironmentVariable(\"activationBalance\");\n\ntests[\"Available balance returned\"] = amounts.availableBalance !== null;\ntests[\"Available balance amount correct\"] = amounts.availableBalance.amount == postman.getEnvironmentVariable(\"activationBalance\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"requestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/lookupGiftcard/{{requestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": "This lookup checks that the card's book balance was reverted during the load reversal."
					},
					"response": []
				},
				{
					"name": "Redemption",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\n\nvar amounts = jsonData.amounts;\ntests[\"Amounts present\"] = amounts !== null;\ntests[\"Requested amount returned\"] = amounts.requestAmount !== null;\ntests[\"Requested amount correct\"] = amounts.requestAmount.amount == postman.getEnvironmentVariable(\"redeemAmount\");\ntests[\"Approved amount returned\"] = amounts.approvedAmount !== null;\ntests[\"Approved amount correct\"] = amounts.approvedAmount.amount == postman.getEnvironmentVariable(\"redeemAmount\");\ntests[\"Balance amount returned\"] = amounts.balanceAmount !== null;\nvar postRedeemBalance = parseInt(postman.getEnvironmentVariable(\"activationBalance\")) - amounts.approvedAmount.amount;\ntests[\"Balance amount correct\"] = amounts.balanceAmount.amount == postRedeemBalance;\ntests[\"Available balance returned\"] = amounts.availableBalance !== null;\ntests[\"Available balance correct\"] = amounts.availableBalance.amount == postRedeemBalance;\n\npostman.setEnvironmentVariable(\"balanceAmount\", amounts.balanceAmount.amount);"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"redemptionRequestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);\n\npostman.setEnvironmentVariable(\"redeemAmount\", 10);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/redemptions/{{redemptionRequestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{redemptionRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"amounts\": {\n      \"requestAmount\": {\n          \"amount\": \"{{redeemAmount}}\",\n          \"currency\": \"710\"\n      }\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Post-redeem Lookup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\n\nvar amounts = jsonData.amounts;\ntests[\"Amounts present\"] = amounts !== null;\n\ntests[\"Balance amount returned\"] = amounts.balanceAmount !== null;\ntests[\"Balance amount correct\"] = amounts.balanceAmount.amount == postman.getEnvironmentVariable(\"balanceAmount\");\ntests[\"Available balance returned\"] = amounts.availableBalance !== null;\ntests[\"Available balance amount correct\"] = amounts.availableBalance.amount == postman.getEnvironmentVariable(\"balanceAmount\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"requestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/lookupGiftcard/{{requestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": "This lookup checks that both the card's balances were updated to reflect the load."
					},
					"response": []
				},
				{
					"name": "Redemption Reversal",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 202\"] = responseCode.code === 202;\nvar jsonData = JSON.parse(responseBody);\ntests[\"Advice Response id is not null\"] = jsonData.id !== null;\ntests[\"Original Response id is not null\"] = jsonData.requestId !== null;\ntests[\"Original id equals request id\"] = jsonData.requestId === postman.getEnvironmentVariable(\"redemptionRequestUuid\");\ntests[\"Advice Response id equals request id\"] = jsonData.id === postman.getEnvironmentVariable(\"adviceUuid\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar adviceUuid = uuid();\npostman.setEnvironmentVariable(\"adviceUuid\", adviceUuid);\n\nvar uuidLast4 = adviceUuid.substr(adviceUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/redemptions/{{redemptionRequestUuid}}/reversals/{{adviceUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{adviceUuid}}\",\n    \"requestId\": \"{{redemptionRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"reversalReason\": \"CANCELLED\",\n    \"thirdPartyIdentifiers\" : [\n      {\n        \"institutionId\": \"11111111\",\n        \"transactionIdentifier\": \"ORIG6459\"\n      },\n      {\n        \"institutionId\": \"22222222\",\n        \"transactionIdentifier\": \"CLNT6459\"\n      }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Redemption Confirmation - Declined",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar errorDetail = JSON.parse(responseBody);\ntests[\"Error type is GENERAL_ERROR\"] = errorDetail.errorType === \"GENERAL_ERROR\";\ntests[\"Test that requestType is not null\"] = errorDetail.requestType !== null;\ntests[\"Test that requestType is ActivationConfirmationRequest\"] = errorDetail.requestType === \"REDEMPTION_CONFIRMATION\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar adviceUuid = uuid();\npostman.setEnvironmentVariable(\"adviceUuid\", adviceUuid);\n\nvar uuidLast4 = adviceUuid.substr(adviceUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/redemptions/{{redemptionRequestUuid}}/confirmations/{{adviceUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{adviceUuid}}\",\n    \"requestId\": \"{{redemptionRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\" : [\n      {\n        \"institutionId\": \"11111111\",\n        \"transactionIdentifier\": \"ORIG6459\"\n      },\n      {\n        \"institutionId\": \"22222222\",\n        \"transactionIdentifier\": \"CLNT6459\"\n      }\n    ]\n}"
						},
						"description": "This confirmation must be declined since the original request has been successfully reversed.\n\nNote that this scenario shouldn't occur since it describes a bug in the client - reversed requests should never be confirmed. However a server implementation should try to identify and correctly handle such scenarios."
					},
					"response": []
				},
				{
					"name": "Post-redeem-reversal Lookup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\n\nvar amounts = jsonData.amounts;\ntests[\"Amounts present\"] = amounts !== null;\n\ntests[\"Balance amount returned\"] = amounts.balanceAmount !== null;\ntests[\"Balance amount correct\"] = amounts.balanceAmount.amount == postman.getEnvironmentVariable(\"activationBalance\");\ntests[\"Available balance returned\"] = amounts.availableBalance !== null;\ntests[\"Available balance amount correct\"] = amounts.availableBalance.amount == postman.getEnvironmentVariable(\"activationBalance\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"requestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/lookupGiftcard/{{requestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": "This lookup checks that both the card's balances were reverted to reflect the reversal."
					},
					"response": []
				},
				{
					"name": "Void",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\n\nvar amounts = jsonData.amounts;\ntests[\"Amounts present\"] = amounts !== null;\n//the load and redemption were both reversed so the void must return the balance after activation\ntests[\"Balance amount returned\"] = amounts.balanceAmount !== null;\ntests[\"Balance amount correct\"] = amounts.balanceAmount.amount == postman.getEnvironmentVariable(\"activationBalance\");\ntests[\"Available balance returned\"] = amounts.availableBalance !== null;\ntests[\"Available balance correct\"] = amounts.availableBalance.amount == postman.getEnvironmentVariable(\"activationBalance\");\n\npostman.setEnvironmentVariable(\"balanceAmount\", amounts.availableBalance.amount);"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"voidRequestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/voids/{{voidRequestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{voidRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Redemption - Declined",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar errorDetail = JSON.parse(responseBody);\ntests[\"Error type is CARD_VOIDED\"] = errorDetail.errorType === \"CARD_VOIDED\";\ntests[\"Test that requestType is not null\"] = errorDetail.requestType !== null;\ntests[\"Test that requestType is RedemptionRequest\"] = errorDetail.requestType === \"REDEMPTION_REQUEST\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"redemptionRequestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);\n\npostman.setEnvironmentVariable(\"redeemAmount\", 10);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/redemptions/{{redemptionRequestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{redemptionRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"amounts\": {\n      \"requestAmount\": {\n          \"amount\": \"{{redeemAmount}}\",\n          \"currency\": \"710\"\n      }\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": "This redemption must be declined since the process to void the card has begun."
					},
					"response": []
				},
				{
					"name": "Post-void Lookup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\n\nvar amounts = jsonData.amounts;\ntests[\"Amounts present\"] = amounts !== null;\n\ntests[\"Balance amount returned\"] = amounts.balanceAmount !== null;\ntests[\"Balance amount correct\"] = amounts.balanceAmount.amount == postman.getEnvironmentVariable(\"balanceAmount\");\ntests[\"Available balance returned\"] = amounts.availableBalance !== null;\ntests[\"Available balance amount correct\"] = amounts.availableBalance.amount == postman.getEnvironmentVariable(\"balanceAmount\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"requestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/lookupGiftcard/{{requestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": "This lookup checks that both the card's balances continue to reflect any remaining balance."
					},
					"response": []
				},
				{
					"name": "Void Reversal",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 202\"] = responseCode.code === 202;\nvar jsonData = JSON.parse(responseBody);\ntests[\"Advice Response id is not null\"] = jsonData.id !== null;\ntests[\"Original Response id is not null\"] = jsonData.requestId !== null;\ntests[\"Original id equals request id\"] = jsonData.requestId === postman.getEnvironmentVariable(\"voidRequestUuid\");\ntests[\"Advice Response id equals request id\"] = jsonData.id === postman.getEnvironmentVariable(\"adviceUuid\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar adviceUuid = uuid();\npostman.setEnvironmentVariable(\"adviceUuid\", adviceUuid);\n\nvar uuidLast4 = adviceUuid.substr(adviceUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/voids/{{voidRequestUuid}}/reversals/{{adviceUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{adviceUuid}}\",\n    \"requestId\": \"{{voidRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"reversalReason\": \"CANCELLED\",\n    \"thirdPartyIdentifiers\" : [\n      {\n        \"institutionId\": \"11111111\",\n        \"transactionIdentifier\": \"ORIG6459\"\n      },\n      {\n        \"institutionId\": \"22222222\",\n        \"transactionIdentifier\": \"CLNT6459\"\n      }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Post-void-reversal Lookup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\n\nvar amounts = jsonData.amounts;\ntests[\"Amounts present\"] = amounts !== null;\n\ntests[\"Balance amount returned\"] = amounts.balanceAmount !== null;\ntests[\"Balance amount correct\"] = amounts.balanceAmount.amount == postman.getEnvironmentVariable(\"balanceAmount\");\ntests[\"Available balance returned\"] = amounts.availableBalance !== null;\ntests[\"Available balance amount correct\"] = amounts.availableBalance.amount == postman.getEnvironmentVariable(\"balanceAmount\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"requestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/lookupGiftcard/{{requestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": "This lookup checks that both the card's balances continue to reflect any remaining balance."
					},
					"response": []
				},
				{
					"name": "Post-void-reversal Redemption",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\n\nvar amounts = jsonData.amounts;\ntests[\"Amounts present\"] = amounts !== null;\ntests[\"Requested amount returned\"] = amounts.requestAmount !== null;\ntests[\"Requested amount correct\"] = amounts.requestAmount.amount == postman.getEnvironmentVariable(\"redeemAmount\");\ntests[\"Approved amount returned\"] = amounts.approvedAmount !== null;\ntests[\"Approved amount correct\"] = amounts.approvedAmount.amount == postman.getEnvironmentVariable(\"redeemAmount\");\ntests[\"Balance amount returned\"] = amounts.balanceAmount !== null;\nvar postRedeemBalance = parseInt(postman.getEnvironmentVariable(\"activationBalance\")) - amounts.approvedAmount.amount;\ntests[\"Balance amount correct\"] = amounts.balanceAmount.amount == postRedeemBalance;\ntests[\"Available balance returned\"] = amounts.availableBalance !== null;\ntests[\"Available balance correct\"] = amounts.availableBalance.amount == postRedeemBalance;\n\npostman.setEnvironmentVariable(\"balanceAmount\", amounts.balanceAmount.amount);"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"redemptionRequestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);\n\npostman.setEnvironmentVariable(\"redeemAmount\", 10);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/redemptions/{{redemptionRequestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{redemptionRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"amounts\": {\n      \"requestAmount\": {\n          \"amount\": \"{{redeemAmount}}\",\n          \"currency\": \"710\"\n      }\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": "This redemption must be approved since the request to void the card was reversed."
					},
					"response": []
				},
				{
					"name": "Void Confirmation - Declined",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar errorDetail = JSON.parse(responseBody);\ntests[\"Error type is GENERAL_ERROR\"] = errorDetail.errorType === \"GENERAL_ERROR\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar adviceUuid = uuid();\npostman.setEnvironmentVariable(\"adviceUuid\", adviceUuid);\n\nvar uuidLast4 = adviceUuid.substr(adviceUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/voids/{{voidRequestUuid}}/confirmations/{{adviceUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{adviceUuid}}\",\n    \"requestId\": \"{{voidRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\" : [\n      {\n        \"institutionId\": \"11111111\",\n        \"transactionIdentifier\": \"ORIG6459\"\n      },\n      {\n        \"institutionId\": \"22222222\",\n        \"transactionIdentifier\": \"CLNT6459\"\n      }\n    ]\n}"
						},
						"description": "This confirmation must be declined since the original request has been successfully reversed.\n\nNote that this scenario shouldn't occur since it describes a bug in the client - reversed requests should never be confirmed. However a server implementation should try to identify and correctly handle such scenarios."
					},
					"response": []
				},
				{
					"name": "Post-run Reset",
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/testServerAdmin/reset",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userDataWillBeLost\": \"TRUE\",\n\t\"resetUserData\": \"TRUE\"\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Test Expiry Date",
			"description": "This collections tests the following aspects of expiry date checking as part of redemtpions:\n\n- an incorrect expiry date is declined\n- an expired card is declined\n- a correct expiry date is approved",
			"item": [
				{
					"name": "Pre-run Reset",
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/testServerAdmin/reset",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userDataWillBeLost\": \"TRUE\",\n\t\"resetUserData\": \"TRUE\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Activate Card 7921 With Incorrect Date - Declined",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar errorDetail = JSON.parse(responseBody);\ntests[\"Error type is CARD_EXPIRED\"] = errorDetail.errorType === \"CARD_EXPIRED\";\ntests[\"Test that requestType is not null\"] = errorDetail.requestType !== null;\ntests[\"Test that requestType is ActivationRequest\"] = errorDetail.requestType === \"ACTIVATION_REQUEST\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"activationRequestUuid\", requestUuid);\n\nvar card = {pan: \"0597253373808397921\", expDate: \"4010\", encPin: \"30DED59C\"};\npostman.setEnvironmentVariable(\"cardPan\", card.pan);\npostman.setEnvironmentVariable(\"cardExpDate\", card.expDate);\npostman.setEnvironmentVariable(\"cardEncPin\", card.encPin);\n\nvar product = {id: \"product002\", barcode: \"9355115077680\", type: \"physical\", startingBalance: 100};\npostman.setEnvironmentVariable(\"productId\", product.id);\npostman.setEnvironmentVariable(\"productBarcode\", product.barcode);\npostman.setEnvironmentVariable(\"productType\", product.type);\npostman.setEnvironmentVariable(\"productStartBal\", product.startingBalance);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"sett\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/giftcard/{{version}}/activations/{{activationRequestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{activationRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"product\": {\n      \"id\": \"{{productId}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Activate Card 7921 With Correct Date - Approved",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"activationRequestUuid\", requestUuid);\n\nvar card = {pan: \"0597253373808397921\", expDate: \"4001\", encPin: \"30DED59C\"};\npostman.setEnvironmentVariable(\"cardPan\", card.pan);\npostman.setEnvironmentVariable(\"cardExpDate\", card.expDate);\npostman.setEnvironmentVariable(\"cardEncPin\", card.encPin);\n\nvar product = {id: \"product002\", barcode: \"9355115077680\", type: \"physical\", startingBalance: 100};\npostman.setEnvironmentVariable(\"productId\", product.id);\npostman.setEnvironmentVariable(\"productBarcode\", product.barcode);\npostman.setEnvironmentVariable(\"productType\", product.type);\npostman.setEnvironmentVariable(\"productStartBal\", product.startingBalance);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"sett\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/giftcard/{{version}}/activations/{{activationRequestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{activationRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"product\": {\n      \"id\": \"{{productId}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Activate Card 2130 With Expired Date - Declined",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar errorDetail = JSON.parse(responseBody);\ntests[\"Error type is CARD_EXPIRED\"] = errorDetail.errorType === \"CARD_EXPIRED\";\ntests[\"Test that requestType is not null\"] = errorDetail.requestType !== null;\ntests[\"Test that requestType is ActivationRequest\"] = errorDetail.requestType === \"ACTIVATION_REQUEST\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"activationRequestUuid\", requestUuid);\n\nvar card = {pan: \"3587368856326842130\", expDate: \"1510\", clearPin: \"1043\"};\npostman.setEnvironmentVariable(\"cardPan\", card.pan);\npostman.setEnvironmentVariable(\"cardExpDate\", card.expDate);\npostman.setEnvironmentVariable(\"cardClearPin\", card.clearPin);\n\nvar product = {id: \"product002\", barcode: \"9355115077680\", type: \"physical\", startingBalance: 100};\npostman.setEnvironmentVariable(\"productId\", product.id);\npostman.setEnvironmentVariable(\"productBarcode\", product.barcode);\npostman.setEnvironmentVariable(\"productType\", product.type);\npostman.setEnvironmentVariable(\"productStartBal\", product.startingBalance);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"sett\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/giftcard/{{version}}/activations/{{activationRequestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{activationRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{cardPan}}\",\n      \"expiryDate\": \"{{cardExpDate}}\"\n    },\n    \"product\": {\n      \"id\": \"{{productId}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Post-run Reset",
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/testServerAdmin/reset",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userDataWillBeLost\": \"TRUE\",\n\t\"resetUserData\": \"TRUE\"\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Test PINs",
			"description": "This collections tests the following aspects of card PIN use during redemptions:\n\n- an incorrect encrypted PIN is declined\n- an incorrect clear PIN is declined\n- a missing encrypted PIN is declined\n- a missing clear PIN is declined\n- a correct encrypted PIN is approved\n- a correct clear PIN is approved",
			"item": [
				{
					"name": "Pre-run Reset",
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/testServerAdmin/reset",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userDataWillBeLost\": \"TRUE\",\n\t\"resetUserData\": \"TRUE\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Activate 7921",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"activationRequestUuid\", requestUuid);\n\nvar card1 = {pan: \"0597253373808397921\", expDate: \"4001\", encPin: \"30DED59C\"};\npostman.setEnvironmentVariable(\"card1Pan\", card1.pan);\npostman.setEnvironmentVariable(\"card1ExpDate\", card1.expDate);\npostman.setEnvironmentVariable(\"card1EncPin\", card1.encPin);\n\nvar product = {id: \"product002\", barcode: \"9355115077680\", type: \"physical\", startingBalance: 100};\npostman.setEnvironmentVariable(\"productId\", product.id);\npostman.setEnvironmentVariable(\"productBarcode\", product.barcode);\npostman.setEnvironmentVariable(\"productType\", product.type);\npostman.setEnvironmentVariable(\"productStartBal\", product.startingBalance);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"sett\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/giftcard/{{version}}/activations/{{activationRequestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{activationRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{card1Pan}}\",\n      \"expiryDate\": \"{{card1ExpDate}}\"\n    },\n    \"product\": {\n      \"id\": \"{{productId}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Acivation Confirmation 7921",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 202\"] = responseCode.code === 202;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Advice Response id is not null\"] = jsonData.id !== null;\ntests[\"Original Response id is not null\"] = jsonData.requestId !== null;\ntests[\"Original id equals request id\"] = jsonData.requestId === postman.getEnvironmentVariable(\"activationRequestUuid\");\ntests[\"Advice Response id equals request id\"] = jsonData.id === postman.getEnvironmentVariable(\"adviceUuid\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar adviceUuid = uuid();\npostman.setEnvironmentVariable(\"adviceUuid\", adviceUuid);\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/activations/{{activationRequestUuid}}/confirmations/{{adviceUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{adviceUuid}}\",\n    \"requestId\": \"{{activationRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Activate 3442",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"activationRequestUuid\", requestUuid);\n\nvar card2 = {pan: \"1258554313683463442\", expDate: \"4007\", clearPin: \"7052\"};\npostman.setEnvironmentVariable(\"card2Pan\", card2.pan);\npostman.setEnvironmentVariable(\"card2ExpDate\", card2.expDate);\npostman.setEnvironmentVariable(\"card2ClearPin\", card2.clearPin);\n\nvar product = {id: \"product002\", barcode: \"9355115077680\", type: \"physical\", startingBalance: 100};\npostman.setEnvironmentVariable(\"productId\", product.id);\npostman.setEnvironmentVariable(\"productBarcode\", product.barcode);\npostman.setEnvironmentVariable(\"productType\", product.type);\npostman.setEnvironmentVariable(\"productStartBal\", product.startingBalance);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"sett\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/giftcard/{{version}}/activations/{{activationRequestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{activationRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{card2Pan}}\",\n      \"expiryDate\": \"{{card2ExpDate}}\"\n    },\n    \"product\": {\n      \"id\": \"{{productId}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Acivation Confirmation 3442",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 202\"] = responseCode.code === 202;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Advice Response id is not null\"] = jsonData.id !== null;\ntests[\"Original Response id is not null\"] = jsonData.requestId !== null;\ntests[\"Original id equals request id\"] = jsonData.requestId === postman.getEnvironmentVariable(\"activationRequestUuid\");\ntests[\"Advice Response id equals request id\"] = jsonData.id === postman.getEnvironmentVariable(\"adviceUuid\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar adviceUuid = uuid();\npostman.setEnvironmentVariable(\"adviceUuid\", adviceUuid);\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/activations/{{activationRequestUuid}}/confirmations/{{adviceUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{adviceUuid}}\",\n    \"requestId\": \"{{activationRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Incorrect Enc PIN Declined 7921",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar errorDetail = JSON.parse(responseBody);\ntests[\"Error type is INCORRECT_PIN\"] = errorDetail.errorType === \"INCORRECT_PIN\";\ntests[\"Test that requestType is not null\"] = errorDetail.requestType !== null;\ntests[\"Test that requestType is RedemptionRequest\"] = errorDetail.requestType === \"REDEMPTION_REQUEST\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"redemptionRequestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);\n\npostman.setEnvironmentVariable(\"redeemAmount\", 10);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/redemptions/{{redemptionRequestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{redemptionRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{card1Pan}}\",\n      \"expiryDate\": \"{{card1ExpDate}}\",\n      \"encryptedPin\": \"AAAAAAAA\"\n    },\n    \"amounts\": {\n      \"requestAmount\": {\n          \"amount\": \"{{redeemAmount}}\",\n          \"currency\": \"710\"\n      }\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Incorrect Clear PIN Declined 3442",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar errorDetail = JSON.parse(responseBody);\ntests[\"Error type is INCORRECT_PIN\"] = errorDetail.errorType === \"INCORRECT_PIN\";\ntests[\"Test that requestType is not null\"] = errorDetail.requestType !== null;\ntests[\"Test that requestType is RedemptionRequest\"] = errorDetail.requestType === \"REDEMPTION_REQUEST\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"redemptionRequestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);\n\npostman.setEnvironmentVariable(\"redeemAmount\", 10);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/redemptions/{{redemptionRequestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{redemptionRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{card2Pan}}\",\n      \"expiryDate\": \"{{card2ExpDate}}\",\n      \"clearPin\": \"1234\"\n    },\n    \"amounts\": {\n      \"requestAmount\": {\n          \"amount\": \"{{redeemAmount}}\",\n          \"currency\": \"710\"\n      }\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Missing Enc PIN Declined 7921",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar errorDetail = JSON.parse(responseBody);\ntests[\"Error type is INCORRECT_PIN\"] = errorDetail.errorType === \"INCORRECT_PIN\";\ntests[\"Test that requestType is not null\"] = errorDetail.requestType !== null;\ntests[\"Test that requestType is RedemptionRequest\"] = errorDetail.requestType === \"REDEMPTION_REQUEST\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"redemptionRequestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);\n\npostman.setEnvironmentVariable(\"redeemAmount\", 10);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/redemptions/{{redemptionRequestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{redemptionRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{card1Pan}}\",\n      \"expiryDate\": \"{{card1ExpDate}}\"\n    },\n    \"amounts\": {\n      \"requestAmount\": {\n          \"amount\": \"{{redeemAmount}}\",\n          \"currency\": \"710\"\n      }\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Missing Clear PIN Declined 3442",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar errorDetail = JSON.parse(responseBody);\ntests[\"Error type is INCORRECT_PIN\"] = errorDetail.errorType === \"INCORRECT_PIN\";\ntests[\"Test that requestType is not null\"] = errorDetail.requestType !== null;\ntests[\"Test that requestType is RedemptionRequest\"] = errorDetail.requestType === \"REDEMPTION_REQUEST\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"redemptionRequestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);\n\npostman.setEnvironmentVariable(\"redeemAmount\", 10);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/redemptions/{{redemptionRequestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{redemptionRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{card2Pan}}\",\n      \"expiryDate\": \"{{card2ExpDate}}\"\n    },\n    \"amounts\": {\n      \"requestAmount\": {\n          \"amount\": \"{{redeemAmount}}\",\n          \"currency\": \"710\"\n      }\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Correct Enc PIN Approved 7921",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"redemptionRequestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);\n\npostman.setEnvironmentVariable(\"redeemAmount\", 10);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/redemptions/{{redemptionRequestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{redemptionRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{card1Pan}}\",\n      \"expiryDate\": \"{{card1ExpDate}}\",\n      \"encryptedPin\": \"{{card1EncPin}}\"\n    },\n    \"amounts\": {\n      \"requestAmount\": {\n          \"amount\": \"{{redeemAmount}}\",\n          \"currency\": \"710\"\n      }\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Correct Clear PIN Approved 3442",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestUuid = uuid();\npostman.setEnvironmentVariable(\"redemptionRequestUuid\", requestUuid);\n\nvar uuidLast4 = requestUuid.substr(requestUuid.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);\n\npostman.setEnvironmentVariable(\"redeemAmount\", 10);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/redemptions/{{redemptionRequestUuid}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{redemptionRequestUuid}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"terminalId\": \"{{termId}}\",\n      \"merchant\": {\n        \"merchantType\": \"{{merchantType}}\",\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"name\": \"{{merchantName}}\",\n          \"city\": \"{{merchantCity}}\",\n          \"region\": \"{{merchantRegion}}\",\n          \"country\": \"{{merchantCountry}}\"\n        }\n      }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"posInfo\": {\n      \"entryMode\": {\n        \"panEntryMode\": \"{{panEntryMode}}\",\n        \"pinEntryCapability\": \"{{pinEntryCapability}}\"\n      }\n    },\n    \"card\": {\n      \"pan\": \"{{card2Pan}}\",\n      \"expiryDate\": \"{{card2ExpDate}}\",\n      \"clearPin\": \"{{card2ClearPin}}\"\n    },\n    \"amounts\": {\n      \"requestAmount\": {\n          \"amount\": \"{{redeemAmount}}\",\n          \"currency\": \"710\"\n      }\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Post-run Reset",
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "http://{{host}}/giftcard/{{version}}/testServerAdmin/reset",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userDataWillBeLost\": \"TRUE\",\n\t\"resetUserData\": \"TRUE\"\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		}
	]
}